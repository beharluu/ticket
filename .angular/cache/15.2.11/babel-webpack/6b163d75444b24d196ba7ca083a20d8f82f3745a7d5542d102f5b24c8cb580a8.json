{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../icon/icon.component\";\nfunction SubtaskListComponent_li_16_app_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-icon\", 18);\n  }\n}\nfunction SubtaskListComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 14)(1, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function SubtaskListComponent_li_16_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r2 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.changeCheckStatus(i_r2));\n    });\n    i0.ɵɵtemplate(2, SubtaskListComponent_li_16_app_icon_2_Template, 1, 0, \"app-icon\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = task_r1.get(\"checked\")) == null ? null : tmp_1_0.value);\n  }\n}\nexport class SubtaskListComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.subTasks = [{\n      checked: true,\n      title: 'Send invoice to collections agency'\n    }, {\n      checked: false,\n      title: 'Write an email to them to follow-up'\n    }, {\n      checked: false,\n      title: 'Send paper mail to account'\n    }, {\n      checked: true,\n      title: `This is my new subtask... I'm autofocused here when I add a subtask`\n    }];\n    this.tasksForm = this.fb.group({\n      tasks: this.fb.array([this.createTask('Default Task 1', true), this.createTask('Default Task 2', false)])\n    });\n  }\n  createTask(name, checked) {\n    return this.fb.group({\n      name: new FormControl(name),\n      checked: new FormControl(checked) // Default value for checked\n    });\n  }\n\n  get tasks() {\n    return this.tasksForm.get('tasks');\n  }\n  addTask() {\n    this.tasks.push(this.createTask('', false)); // Add new task with empty name\n  }\n\n  submitTasks() {\n    console.log(this.tasksForm.value); // Log the current value of the form\n  }\n\n  changeCheckStatus(index) {\n    const taskControl = this.tasks.at(index);\n    const checkedControl = taskControl.get('checked');\n    if (checkedControl) {\n      const currentCheckedValue = checkedControl.value;\n      checkedControl.setValue(!currentCheckedValue);\n    }\n  }\n  static {\n    this.ɵfac = function SubtaskListComponent_Factory(t) {\n      return new (t || SubtaskListComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SubtaskListComponent,\n      selectors: [[\"app-subtask-list\"]],\n      decls: 21,\n      vars: 2,\n      consts: [[1, \"subtask-list\"], [1, \"container\"], [1, \"top\"], [\"role\", \"progressbar\", \"aria-label\", \"Basic example\", \"aria-valuenow\", \"75\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress\"], [1, \"progress-bar\", 2, \"width\", \"75%\"], [1, \"line-break\"], [1, \"list-group\"], [1, \"list-group-item\"], [3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"tasks\"], [\"class\", \"list-group-item\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", 3, \"click\"], [\"name\", \"icon-zoomIn\"], [1, \"title\"], [1, \"list-group-item\", 3, \"formGroupName\"], [1, \"checkmark\", 3, \"click\"], [\"name\", \"icon-checkmark\", 4, \"ngIf\"], [\"formControlName\", \"name\", \"placeholder\", \"Enter task name\", 1, \"title\"], [\"name\", \"icon-checkmark\"]],\n      template: function SubtaskListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n          i0.ɵɵtext(4, \"Subtasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3);\n          i0.ɵɵelement(6, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"span\");\n          i0.ɵɵtext(8, \"1/4\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(9, \"div\", 5);\n          i0.ɵɵelementStart(10, \"div\", 1)(11, \"ul\", 6)(12, \"li\", 7);\n          i0.ɵɵtext(13, \"Subtask name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function SubtaskListComponent_Template_form_ngSubmit_14_listener() {\n            return ctx.submitTasks();\n          });\n          i0.ɵɵelementStart(15, \"div\", 9);\n          i0.ɵɵtemplate(16, SubtaskListComponent_li_16_Template, 4, 2, \"li\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"li\", 11);\n          i0.ɵɵlistener(\"click\", function SubtaskListComponent_Template_li_click_17_listener() {\n            return ctx.addTask();\n          });\n          i0.ɵɵelement(18, \"app-icon\", 12);\n          i0.ɵɵelementStart(19, \"div\", 13);\n          i0.ɵɵtext(20, \"Add subtask\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"formGroup\", ctx.tasksForm);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks.controls);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i3.IconComponent],\n      styles: [\".subtask-list[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  flex-wrap: wrap;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 12px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .top[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  align-items: center;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .top[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\\n  margin-right: 12px;\\n  color: #030929;\\n  font-size: 20px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .top[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%] {\\n  width: 94px;\\n  height: 10px;\\n  margin-right: 8px;\\n  font-weight: 500;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .list-group[_ngcontent-%COMP%] {\\n  margin-top: 24px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .list-group[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]:first-child {\\n  color: #687196;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%] {\\n  color: #687196;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]:hover {\\n  background-color: #F1F3F8;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 50%;\\n  background-color: rgba(104, 113, 150, 0.1);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 4px;\\n  border: 1px solid rgb(233, 238, 249);\\n  cursor: pointer;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border: none;\\n  width: 100%;\\n  outline: none;\\n  padding: 5px;\\n  font-size: 14px;\\n  background-color: transparent;\\n  color: #687196;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  color: #030929;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .line-break[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 1.5px;\\n  background-color: rgb(230, 235, 240);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3N1YnRhc2stbGlzdC9zdWJ0YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9Bbmd1bGFyJTIwUHJvamVjdHMvdGlja2V0L3NyYy9hcHAvc2hhcmVkL3N1YnRhc2stbGlzdC9zdWJ0YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUNDSjtBRENJO0VBQ0ksV0FBQTtFQUNBLG1CQUFBO0FDQ1I7QURDUTtFQUNJLFdBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQ0NaO0FEQ1k7RUFDSSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0FDQ2hCO0FER1k7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUNEaEI7QURLUTtFQUNJLGdCQUFBO0FDSFo7QURLWTtFQUNJLGNBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsUUFBQTtBQ0hoQjtBRE9nQjtFQUVJLGNBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsUUFBQTtBQ05wQjtBRFFvQjtFQUNJLHlCQUFBO0FDTnhCO0FEU29CO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLDBDQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0VBQ0Esb0NBQUE7RUFDQSxlQUFBO0FDUHhCO0FEVW9CO0VBRUksWUFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSw2QkFBQTtFQUNBLGNBQUE7QUNUeEI7QURXd0I7RUFDSSxjQUFBO0FDVDVCO0FENkNJO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSxvQ0FBQTtBQzNDUiIsInNvdXJjZXNDb250ZW50IjpbIi5zdWJ0YXNrLWxpc3R7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG5cbiAgICAuY29udGFpbmVye1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcblxuICAgICAgICAudG9we1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgICAgICAgICBoNXtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEycHg7XG4gICAgICAgICAgICAgICAgY29sb3I6ICMwMzA5Mjk7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICBcblxuICAgICAgICAgICAgLnByb2dyZXNze1xuICAgICAgICAgICAgICAgIHdpZHRoOiA5NHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmxpc3QtZ3JvdXB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyNHB4O1xuXG4gICAgICAgICAgICAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjNjg3MTk2O1xuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgZ2FwOiA4cHg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvcm17XG4gICAgICAgICAgICAgICAgLmxpc3QtZ3JvdXAtaXRlbXtcblxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzY4NzE5NjtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBnYXA6IDhweDtcblxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVye1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0YxRjNGODtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC5jaGVja21hcmt7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTA0LCAxMTMsIDE1MCwgMC4xKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA0cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjMzLCAyMzgsIDI0OSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgaW5wdXR7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjb2xvcjogIzAzMDkyOTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICM2ODcxOTY7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICY6Zm9jdXN7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMzA5Mjk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgLy8gJjpob3ZlcntcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICNGMUYzRjg7XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBpbnB1dHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGM0Y4O1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIC8vICY6Zmlyc3QtY2hpbGR7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkFGQkZEO1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgY29sb3I6ICM2ODcxOTY7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBjdXJzb3I6ZGVmYXVsdDtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAmOmhvdmVye1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGQUZCRkQ7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgLy8gJjpsYXN0LWNoaWxke1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICNGQUZCRkQ7XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAmOmhvdmVye1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGMUYzRjg7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIC5saW5lLWJyZWFre1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxLjVweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzMCwgMjM1LCAyNDApO1xuICAgIH1cbn0iLCIuc3VidGFzay1saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi5zdWJ0YXNrLWxpc3QgLmNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyIC50b3Age1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uc3VidGFzay1saXN0IC5jb250YWluZXIgLnRvcCBoNSB7XG4gIG1hcmdpbi1yaWdodDogMTJweDtcbiAgY29sb3I6ICMwMzA5Mjk7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5zdWJ0YXNrLWxpc3QgLmNvbnRhaW5lciAudG9wIC5wcm9ncmVzcyB7XG4gIHdpZHRoOiA5NHB4O1xuICBoZWlnaHQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xuICBmb250LXdlaWdodDogNTAwO1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyIC5saXN0LWdyb3VwIHtcbiAgbWFyZ2luLXRvcDogMjRweDtcbn1cbi5zdWJ0YXNrLWxpc3QgLmNvbnRhaW5lciAubGlzdC1ncm91cCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxkIHtcbiAgY29sb3I6ICM2ODcxOTY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiA4cHg7XG59XG4uc3VidGFzay1saXN0IC5jb250YWluZXIgLmxpc3QtZ3JvdXAgZm9ybSAubGlzdC1ncm91cC1pdGVtIHtcbiAgY29sb3I6ICM2ODcxOTY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiA4cHg7XG59XG4uc3VidGFzay1saXN0IC5jb250YWluZXIgLmxpc3QtZ3JvdXAgZm9ybSAubGlzdC1ncm91cC1pdGVtOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YxRjNGODtcbn1cbi5zdWJ0YXNrLWxpc3QgLmNvbnRhaW5lciAubGlzdC1ncm91cCBmb3JtIC5saXN0LWdyb3VwLWl0ZW0gLmNoZWNrbWFyayB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDQsIDExMywgMTUwLCAwLjEpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjMzLCAyMzgsIDI0OSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5zdWJ0YXNrLWxpc3QgLmNvbnRhaW5lciAubGlzdC1ncm91cCBmb3JtIC5saXN0LWdyb3VwLWl0ZW0gaW5wdXQge1xuICBib3JkZXI6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xuICBvdXRsaW5lOiBub25lO1xuICBwYWRkaW5nOiA1cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiAjNjg3MTk2O1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyIC5saXN0LWdyb3VwIGZvcm0gLmxpc3QtZ3JvdXAtaXRlbSBpbnB1dDpmb2N1cyB7XG4gIGNvbG9yOiAjMDMwOTI5O1xufVxuLnN1YnRhc2stbGlzdCAubGluZS1icmVhayB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEuNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjMwLCAyMzUsIDI0MCk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,WAAW,QAAmB,gBAAgB;;;;;;;ICiDvDC,+BAA8E;;;;;;IAFlFA,8BAAmG;IAC1EA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IACnDA,sFAA8E;IAChFA,iBAAM;IACNA,4BAA4E;IAC9EA,iBAAK;;;;;;IAL0EA,oCAAmB;IAE7DA,eAAgC;IAAhCA,wFAAgC;;;AD1CzF,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IA6BtB,aAAQ,GAAG,CACT;MACEC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;KACR,EACD;MACED,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;KACR,EACD;MACED,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;KACR,EACD;MACED,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;KACR,CACF;IA7CC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,KAAK,EAAE,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC,CACnB,IAAI,CAACC,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,EACvC,IAAI,CAACA,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,CACzC;KACF,CAAC;EACJ;EAEAA,UAAU,CAACC,IAAY,EAAEP,OAAgB;IACvC,OAAO,IAAI,CAACD,EAAE,CAACI,KAAK,CAAC;MACnBI,IAAI,EAAE,IAAIZ,WAAW,CAACY,IAAI,CAAC;MAC3BP,OAAO,EAAE,IAAIL,WAAW,CAACK,OAAO,CAAC,CAAC;KACnC,CAAC;EACJ;;EAEA,IAAII,KAAK;IACP,OAAO,IAAI,CAACF,SAAS,CAACM,GAAG,CAAC,OAAO,CAAc;EACjD;EAEAC,OAAO;IACL,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,IAAI,CAACJ,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/C;;EAEAK,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,SAAS,CAACY,KAAK,CAAC,CAAC,CAAC;EACrC;;EAsBAC,iBAAiB,CAACC,KAAa;IAC7B,MAAMC,WAAW,GAAG,IAAI,CAACb,KAAK,CAACc,EAAE,CAACF,KAAK,CAAC;IACxC,MAAMG,cAAc,GAAGF,WAAW,CAACT,GAAG,CAAC,SAAS,CAAC;IAEjD,IAAIW,cAAc,EAAE;MAClB,MAAMC,mBAAmB,GAAGD,cAAc,CAACL,KAAK;MAChDK,cAAc,CAACE,QAAQ,CAAC,CAACD,mBAAmB,CAAC;;EAEjD;;;uBA5DWvB,oBAAoB;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAyB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCRjC9B,8BAA0B;UAGVA,wBAAQ;UAAAA,iBAAK;UACjBA,8BAA6H;UACzHA,yBAAmD;UACvDA,iBAAM;UACNA,4BAAM;UAAAA,mBAAG;UAAAA,iBAAO;UAGxBA,yBAA8B;UAE9BA,+BAAuB;UAEaA,6BAAY;UAAAA,iBAAK;UAe7CA,gCAAyD;UAA3BA;YAAA,OAAY+B,iBAAa;UAAA,EAAC;UAkBpD/B,+BAA2B;UACvBA,sEAKK;UACTA,iBAAM;UAQNA,+BAAgD;UAApBA;YAAA,OAAS+B,aAAS;UAAA,EAAC;UAC3C/B,gCAAwC;UACxCA,gCAAmB;UAAAA,4BAAW;UAAAA,iBAAM;;;UAnCtCA,gBAAuB;UAAvBA,yCAAuB;UAmBwBA,eAAmB;UAAnBA,4CAAmB","names":["FormControl","i0","SubtaskListComponent","constructor","fb","checked","title","tasksForm","group","tasks","array","createTask","name","get","addTask","push","submitTasks","console","log","value","changeCheckStatus","index","taskControl","at","checkedControl","currentCheckedValue","setValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/beharlushaku/Desktop/Angular Projects/ticket/src/app/shared/subtask-list/subtask-list.component.ts","/Users/beharlushaku/Desktop/Angular Projects/ticket/src/app/shared/subtask-list/subtask-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-subtask-list',\n  templateUrl: './subtask-list.component.html',\n  styleUrls: ['./subtask-list.component.scss']\n})\nexport class SubtaskListComponent {\n\n  tasksForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.tasksForm = this.fb.group({\n      tasks: this.fb.array([\n        this.createTask('Default Task 1', true),\n        this.createTask('Default Task 2', false)\n      ])\n    });\n  }\n\n  createTask(name: string, checked: boolean): FormGroup {\n    return this.fb.group({\n      name: new FormControl(name),  // Default value for name\n      checked: new FormControl(checked) // Default value for checked\n    });\n  }\n\n  get tasks(): FormArray {\n    return this.tasksForm.get('tasks') as FormArray;\n  }\n\n  addTask() {\n    this.tasks.push(this.createTask('', false)); // Add new task with empty name\n  }\n\n  submitTasks() {\n    console.log(this.tasksForm.value); // Log the current value of the form\n  }\n\n\n  subTasks = [\n    {\n      checked: true,\n      title: 'Send invoice to collections agency'\n    },\n    {\n      checked: false,\n      title: 'Write an email to them to follow-up'\n    },\n    {\n      checked: false,\n      title: 'Send paper mail to account'\n    },\n    {\n      checked: true,\n      title: `This is my new subtask... I'm autofocused here when I add a subtask`\n    }\n  ]\n\n  changeCheckStatus(index: number) {\n    const taskControl = this.tasks.at(index);\n    const checkedControl = taskControl.get('checked');\n\n    if (checkedControl) {\n      const currentCheckedValue = checkedControl.value;\n      checkedControl.setValue(!currentCheckedValue);\n    }\n  }\n\n}\n","<div class=\"subtask-list\">\n    <div class=\"container\">\n        <div class=\"top\">\n            <h5>Subtasks</h5>\n            <div class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                <div class=\"progress-bar\" style=\"width: 75%\"></div>\n            </div>\n            <span>1/4</span>\n        </div>\n    </div>\n    <div class=\"line-break\"></div>\n\n    <div class=\"container\">\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\">Subtask name</li>\n\n            <!-- {{tasksForm.value | json }} -->\n\n            <!-- <form [formGroup]=\"tasksForm\" (ngSubmit)=\"submitTasks()\">\n                <button type=\"button\" (click)=\"addTask()\">Add Task</button>\n            \n                <div *ngFor=\"let task of tasks.controls; let i = index\" [formGroupName]=\"i\">\n                    <input formControlName=\"name\" placeholder=\"Enter task name\" />\n                    <input type=\"checkbox\" formControlName=\"checked\" />\n                </div>\n            \n                <button type=\"submit\">Submit Tasks</button>\n            </form> -->\n\n            <form [formGroup]=\"tasksForm\" (ngSubmit)=\"submitTasks()\">\n                <!-- <button type=\"button\" (click)=\"addTask()\">Add Task</button>\n            \n                <div *ngFor=\"let task of tasks.controls; let i = index\">\n                    <input [formControlName]=\"i\" placeholder=\"Enter a new task\" />\n                 </div> -->\n            \n                <!-- <button type=\"submit\">Submit Tasks</button> -->\n\n                <!-- <li class=\"list-group-item\" *ngFor=\"let task of tasks.controls; let i = index\" [formGroupName]=\"i\">\n                    <div class=\"checkmark\" (click)=\"changeCheckStatus(i)\">\n                        <app-icon name=\"icon-checkmark\" *ngIf=\"checkbox\"></app-icon>\n                    </div>\n                    <div class=\"title\">{{subtask.title}}</div>\n                    <input class=\"title\" [formControlName]=\"name\" placeholder=\"Enter a new task\" />\n    \n                </li> -->\n\n                <div formArrayName=\"tasks\">\n                    <li class=\"list-group-item\" *ngFor=\"let task of tasks.controls; let i = index\" [formGroupName]=\"i\">\n                      <div class=\"checkmark\" (click)=\"changeCheckStatus(i)\">\n                        <app-icon name=\"icon-checkmark\" *ngIf=\"task.get('checked')?.value\"></app-icon>\n                      </div>\n                      <input class=\"title\" formControlName=\"name\" placeholder=\"Enter task name\" />\n                    </li>\n                </div>\n\n\n                \n                <!-- <li class=\"list-group-item\">\n                    <div class=\"checkmark\"></div>\n                    <input type=\"text\" placeholder=\"Writte task name\">\n                </li> -->\n                <li class=\"list-group-item\" (click)=\"addTask()\">\n                    <app-icon name=\"icon-zoomIn\"></app-icon>\n                    <div class=\"title\">Add subtask</div>\n                </li>\n\n            </form>\n\n            <!-- <li *ngFor=\"let task of tasks.controls\">{{ task.value }}</li> -->\n\n\n          \n          </ul>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}