{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../icon/icon.component\";\nconst _c0 = [\"taskInput\"];\nfunction SubtaskListComponent_li_16_app_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-icon\", 20);\n  }\n}\nfunction SubtaskListComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"div\", 16);\n    i0.ɵɵlistener(\"click\", function SubtaskListComponent_li_16_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.changeCheckStatus(i_r2));\n    });\n    i0.ɵɵtemplate(2, SubtaskListComponent_li_16_app_icon_2_Template, 1, 0, \"app-icon\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 18, 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = task_r1.get(\"checked\")) == null ? null : tmp_1_0.value);\n  }\n}\nexport let SubtaskListComponent = /*#__PURE__*/(() => {\n  class SubtaskListComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.subTasks = [];\n      this.taskChecked = 0;\n      this.tasksForm = this.fb.group({\n        tasks: this.fb.array([]) // Initialize with an empty FormArray\n      });\n    }\n\n    ngOnInit() {\n      this.tasksForm = this.fb.group({\n        tasks: this.fb.array(this.subTasks.map(el => this.createTask(el.name, el.checked)))\n      });\n      this.countTaskCheck();\n    }\n    createTask(name, checked) {\n      return this.fb.group({\n        name: new FormControl(name),\n        checked: new FormControl(checked)\n      });\n    }\n    get tasks() {\n      return this.tasksForm.get('tasks');\n    }\n    addTask() {\n      this.tasks.push(this.createTask('', false)); // Add new task with empty name\n      setTimeout(() => {\n        const lastInput = this.taskInputs.last.nativeElement; // After added new task focus on input\n        lastInput.focus();\n      });\n    }\n    changeCheckStatus(index) {\n      const taskControl = this.tasks.at(index);\n      const checkedControl = taskControl.get('checked');\n      if (checkedControl) {\n        const currentCheckedValue = checkedControl.value;\n        checkedControl.setValue(!currentCheckedValue);\n      }\n      this.countTaskCheck();\n    }\n    countTaskCheck() {\n      this.taskChecked = this.tasks.controls.filter(task => task.value.checked).length;\n    }\n    get taskPercentage() {\n      const checkedCount = this.taskChecked;\n      const totalCount = this.tasks.controls.length;\n      return totalCount > 0 ? (checkedCount / totalCount * 100).toFixed(2) : '0';\n    }\n    submitTasks() {\n      console.log(this.tasksForm.value); // Log the current value of the form\n    }\n\n    static {\n      this.ɵfac = function SubtaskListComponent_Factory(t) {\n        return new (t || SubtaskListComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SubtaskListComponent,\n        selectors: [[\"app-subtask-list\"]],\n        viewQuery: function SubtaskListComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.taskInputs = _t);\n          }\n        },\n        inputs: {\n          subTasks: [\"data\", \"subTasks\"]\n        },\n        decls: 21,\n        vars: 7,\n        consts: [[1, \"subtask-list\"], [1, \"container\"], [1, \"top\"], [\"role\", \"progressbar\", \"aria-label\", \"Basic example\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress\"], [1, \"progress-bar\"], [1, \"stats\"], [1, \"line-break\"], [1, \"list-group\"], [1, \"list-group-item\", \"label\"], [3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"tasks\"], [\"class\", \"list-group-item\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"add-new\", 3, \"click\"], [\"name\", \"icon-zoomIn\"], [1, \"title\"], [1, \"list-group-item\", 3, \"formGroupName\"], [1, \"checkmark\", 3, \"click\"], [\"name\", \"icon-checkmark\", 4, \"ngIf\"], [\"formControlName\", \"name\", \"placeholder\", \"Enter task name\", 1, \"title\"], [\"taskInput\", \"\"], [\"name\", \"icon-checkmark\"]],\n        template: function SubtaskListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n            i0.ɵɵtext(4, \"Subtasks\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 3);\n            i0.ɵɵelement(6, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"span\", 5);\n            i0.ɵɵtext(8);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelement(9, \"div\", 6);\n            i0.ɵɵelementStart(10, \"div\", 1)(11, \"ul\", 7)(12, \"li\", 8);\n            i0.ɵɵtext(13, \"Subtask name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"form\", 9);\n            i0.ɵɵlistener(\"ngSubmit\", function SubtaskListComponent_Template_form_ngSubmit_14_listener() {\n              return ctx.submitTasks();\n            });\n            i0.ɵɵelementStart(15, \"div\", 10);\n            i0.ɵɵtemplate(16, SubtaskListComponent_li_16_Template, 5, 2, \"li\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"li\", 12);\n            i0.ɵɵlistener(\"click\", function SubtaskListComponent_Template_li_click_17_listener() {\n              return ctx.addTask();\n            });\n            i0.ɵɵelement(18, \"app-icon\", 13);\n            i0.ɵɵelementStart(19, \"div\", 14);\n            i0.ɵɵtext(20, \"Add subtask\");\n            i0.ɵɵelementEnd()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵattribute(\"aria-valuenow\", ctx.taskPercentage);\n            i0.ɵɵadvance(1);\n            i0.ɵɵstyleProp(\"width\", ctx.taskPercentage + \"%\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate2(\"\", ctx.taskChecked, \"/\", ctx.tasks.controls.length, \"\");\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"formGroup\", ctx.tasksForm);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.tasks.controls);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i3.IconComponent],\n        styles: [\".subtask-list[_ngcontent-%COMP%]{display:flex;width:100%;flex-wrap:wrap}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type{width:100%;margin-bottom:12px}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type   .top[_ngcontent-%COMP%]{width:100%;display:flex;flex-wrap:nowrap;align-items:center}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type   .top[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{color:#030929;font-size:20px;margin:0 12px 0 0;font-weight:500}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type   .top[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%]{width:94px;height:10px;margin-right:8px;font-weight:500;background-color:#3e40db4d}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type   .top[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%]   .progress-bar[_ngcontent-%COMP%]{background-color:#3e40db}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type   .top[_ngcontent-%COMP%]   .stats[_ngcontent-%COMP%]{color:#687196;font-size:14px;font-weight:500}.subtask-list[_ngcontent-%COMP%]   .line-break[_ngcontent-%COMP%]{width:100%;height:1.5px;background-color:#e6ebf0}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]{margin-top:24px}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{color:#687196;cursor:pointer;display:flex;align-items:center;padding:8px;font-size:12px;border-bottom:0;background-color:#fafbfd}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]{padding:8px;color:#687196;font-weight:500;cursor:pointer;display:flex;align-items:center;gap:8px}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]:hover{background-color:#f1f3f8}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%]{width:20px;height:20px;border-radius:50%;background-color:#6871961a;display:flex;align-items:center;justify-content:center;padding:4px;border:1px solid rgb(233,238,249);cursor:pointer}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;width:100%;outline:none;padding:5px;font-size:14px;background-color:transparent;color:#687196;cursor:pointer}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{color:#030929}.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .add-new[_ngcontent-%COMP%]{border-top:0;padding:16px;background-color:#fafbfd;color:#687196;font-weight:400;font-size:14px}\"]\n      });\n    }\n  }\n  return SubtaskListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}