{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../icon/icon.component\";\nfunction SubtaskListComponent_li_16_app_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-icon\", 18);\n  }\n}\nfunction SubtaskListComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 14)(1, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function SubtaskListComponent_li_16_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r2 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.changeCheckStatus(i_r2));\n    });\n    i0.ɵɵtemplate(2, SubtaskListComponent_li_16_app_icon_2_Template, 1, 0, \"app-icon\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = task_r1.get(\"checked\")) == null ? null : tmp_1_0.value);\n  }\n}\nexport class SubtaskListComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.subTasks = [];\n    this.taskChecked = 0;\n    this.tasksForm = this.fb.group({\n      tasks: this.fb.array([]) // Initialize with an empty FormArray\n    });\n  }\n\n  ngOnInit() {\n    this.tasksForm = this.fb.group({\n      tasks: this.fb.array(this.subTasks.map(el => this.createTask(el.name, el.checked)))\n    });\n    this.countTaskCheck();\n  }\n  createTask(name, checked) {\n    return this.fb.group({\n      name: new FormControl(name),\n      checked: new FormControl(checked) // Default value for checked\n    });\n  }\n\n  get tasks() {\n    return this.tasksForm.get('tasks');\n  }\n  addTask() {\n    this.tasks.push(this.createTask('', false)); // Add new task with empty name\n  }\n\n  submitTasks() {\n    console.log(this.tasksForm.value); // Log the current value of the form\n  }\n\n  changeCheckStatus(index) {\n    const taskControl = this.tasks.at(index);\n    const checkedControl = taskControl.get('checked');\n    if (checkedControl) {\n      const currentCheckedValue = checkedControl.value;\n      checkedControl.setValue(!currentCheckedValue);\n    }\n    this.countTaskCheck();\n  }\n  countTaskCheck() {\n    this.taskChecked = this.tasks.controls.filter(task => task.value.checked).length;\n  }\n  get taskPercentage() {\n    const checkedCount = this.taskChecked;\n    const totalCount = this.tasks.controls.length;\n    return totalCount > 0 ? (checkedCount / totalCount * 100).toFixed(2) : '0';\n  }\n  static {\n    this.ɵfac = function SubtaskListComponent_Factory(t) {\n      return new (t || SubtaskListComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SubtaskListComponent,\n      selectors: [[\"app-subtask-list\"]],\n      inputs: {\n        subTasks: [\"data\", \"subTasks\"]\n      },\n      decls: 21,\n      vars: 7,\n      consts: [[1, \"subtask-list\"], [1, \"container\"], [1, \"top\"], [\"role\", \"progressbar\", \"aria-label\", \"Basic example\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress\"], [1, \"progress-bar\"], [1, \"line-break\"], [1, \"list-group\"], [1, \"list-group-item\"], [3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"tasks\"], [\"class\", \"list-group-item\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", 3, \"click\"], [\"name\", \"icon-zoomIn\"], [1, \"title\"], [1, \"list-group-item\", 3, \"formGroupName\"], [1, \"checkmark\", 3, \"click\"], [\"name\", \"icon-checkmark\", 4, \"ngIf\"], [\"formControlName\", \"name\", \"placeholder\", \"Enter task name\", 1, \"title\"], [\"name\", \"icon-checkmark\"]],\n      template: function SubtaskListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n          i0.ɵɵtext(4, \"Subtasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3);\n          i0.ɵɵelement(6, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"span\");\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(9, \"div\", 5);\n          i0.ɵɵelementStart(10, \"div\", 1)(11, \"ul\", 6)(12, \"li\", 7);\n          i0.ɵɵtext(13, \"Subtask name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function SubtaskListComponent_Template_form_ngSubmit_14_listener() {\n            return ctx.submitTasks();\n          });\n          i0.ɵɵelementStart(15, \"div\", 9);\n          i0.ɵɵtemplate(16, SubtaskListComponent_li_16_Template, 4, 2, \"li\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"li\", 11);\n          i0.ɵɵlistener(\"click\", function SubtaskListComponent_Template_li_click_17_listener() {\n            return ctx.addTask();\n          });\n          i0.ɵɵelement(18, \"app-icon\", 12);\n          i0.ɵɵelementStart(19, \"div\", 13);\n          i0.ɵɵtext(20, \"Add subtask\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵattribute(\"aria-valuenow\", ctx.taskPercentage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleProp(\"width\", ctx.taskPercentage + \"%\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate2(\"\", ctx.taskChecked, \"/\", ctx.tasks.controls.length, \"\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.tasksForm);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks.controls);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i3.IconComponent],\n      styles: [\".subtask-list[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  flex-wrap: wrap;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type {\\n  width: 100%;\\n  margin-bottom: 12px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type   .top[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  align-items: center;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type   .top[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\\n  margin-right: 12px;\\n  color: #030929;\\n  font-size: 20px;\\n  margin: 0;\\n  margin-right: 12px;\\n  font-weight: 500;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:first-of-type   .top[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%] {\\n  width: 94px;\\n  height: 10px;\\n  margin-right: 8px;\\n  font-weight: 500;\\n  background-color: rgba(62, 64, 219, 0.3);\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%] {\\n  margin-top: 24px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]:first-child {\\n  color: #687196;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%] {\\n  color: #687196;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]:hover {\\n  background-color: #F1F3F8;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 50%;\\n  background-color: rgba(104, 113, 150, 0.1);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 4px;\\n  border: 1px solid rgb(233, 238, 249);\\n  cursor: pointer;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border: none;\\n  width: 100%;\\n  outline: none;\\n  padding: 5px;\\n  font-size: 14px;\\n  background-color: transparent;\\n  color: #687196;\\n  cursor: pointer;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]:last-of-type   .list-group[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  color: #030929;\\n}\\n.subtask-list[_ngcontent-%COMP%]   .line-break[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 1.5px;\\n  background-color: rgb(230, 235, 240);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3N1YnRhc2stbGlzdC9zdWJ0YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9Bbmd1bGFyJTIwUHJvamVjdHMvdGlja2V0L3NyYy9hcHAvc2hhcmVkL3N1YnRhc2stbGlzdC9zdWJ0YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUNDSjtBRENJO0VBQ0ksV0FBQTtFQUNBLG1CQUFBO0FDQ1I7QURDUTtFQUNJLFdBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQ0NaO0FEQ1k7RUFDSSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUNDaEI7QURFWTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLHdDQUFBO0FDQWhCO0FEUVE7RUFDSSxnQkFBQTtBQ05aO0FEUVk7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFFBQUE7QUNOaEI7QURVZ0I7RUFFSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFFBQUE7QUNUcEI7QURXb0I7RUFDSSx5QkFBQTtBQ1R4QjtBRFlvQjtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSwwQ0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtFQUNBLG9DQUFBO0VBQ0EsZUFBQTtBQ1Z4QjtBRGFvQjtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsNkJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtBQ1h4QjtBRGF3QjtFQUNJLGNBQUE7QUNYNUI7QURtQkk7RUFDSSxXQUFBO0VBQ0EsYUFBQTtFQUNBLG9DQUFBO0FDakJSIiwic291cmNlc0NvbnRlbnQiOlsiLnN1YnRhc2stbGlzdHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZsZXgtd3JhcDogd3JhcDtcblxuICAgIC5jb250YWluZXI6Zmlyc3Qtb2YtdHlwZXtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG5cbiAgICAgICAgLnRvcHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICAgICAgaDV7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjMDMwOTI5O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5wcm9ncmVzc3tcbiAgICAgICAgICAgICAgICB3aWR0aDogOTRweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDYyLCA2NCwgMjE5LCAwLjMpO1xuXG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5jb250YWluZXI6bGFzdC1vZi10eXBle1xuICAgICAgICAubGlzdC1ncm91cHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDI0cHg7XG5cbiAgICAgICAgICAgIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7XG4gICAgICAgICAgICAgICAgY29sb3I6ICM2ODcxOTY7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBnYXA6IDhweDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9ybXtcbiAgICAgICAgICAgICAgICAubGlzdC1ncm91cC1pdGVte1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjNjg3MTk2O1xuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGdhcDogOHB4O1xuXG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXJ7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGM0Y4O1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLmNoZWNrbWFya3tcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDQsIDExMywgMTUwLCAwLjEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDRweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMzMsIDIzOCwgMjQ5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgICAgICAgICBpbnB1dHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICM2ODcxOTY7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICY6Zm9jdXN7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMzA5Mjk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAubGluZS1icmVha3tcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMS41cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzAsIDIzNSwgMjQwKTtcbiAgICB9XG59IiwiLnN1YnRhc2stbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDAlO1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG4uc3VidGFzay1saXN0IC5jb250YWluZXI6Zmlyc3Qtb2YtdHlwZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyOmZpcnN0LW9mLXR5cGUgLnRvcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5zdWJ0YXNrLWxpc3QgLmNvbnRhaW5lcjpmaXJzdC1vZi10eXBlIC50b3AgaDUge1xuICBtYXJnaW4tcmlnaHQ6IDEycHg7XG4gIGNvbG9yOiAjMDMwOTI5O1xuICBmb250LXNpemU6IDIwcHg7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xuICBmb250LXdlaWdodDogNTAwO1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyOmZpcnN0LW9mLXR5cGUgLnRvcCAucHJvZ3Jlc3Mge1xuICB3aWR0aDogOTRweDtcbiAgaGVpZ2h0OiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2MiwgNjQsIDIxOSwgMC4zKTtcbn1cbi5zdWJ0YXNrLWxpc3QgLmNvbnRhaW5lcjpsYXN0LW9mLXR5cGUgLmxpc3QtZ3JvdXAge1xuICBtYXJnaW4tdG9wOiAyNHB4O1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyOmxhc3Qtb2YtdHlwZSAubGlzdC1ncm91cCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxkIHtcbiAgY29sb3I6ICM2ODcxOTY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiA4cHg7XG59XG4uc3VidGFzay1saXN0IC5jb250YWluZXI6bGFzdC1vZi10eXBlIC5saXN0LWdyb3VwIGZvcm0gLmxpc3QtZ3JvdXAtaXRlbSB7XG4gIGNvbG9yOiAjNjg3MTk2O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogOHB4O1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyOmxhc3Qtb2YtdHlwZSAubGlzdC1ncm91cCBmb3JtIC5saXN0LWdyb3VwLWl0ZW06aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGM0Y4O1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyOmxhc3Qtb2YtdHlwZSAubGlzdC1ncm91cCBmb3JtIC5saXN0LWdyb3VwLWl0ZW0gLmNoZWNrbWFyayB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDQsIDExMywgMTUwLCAwLjEpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjMzLCAyMzgsIDI0OSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5zdWJ0YXNrLWxpc3QgLmNvbnRhaW5lcjpsYXN0LW9mLXR5cGUgLmxpc3QtZ3JvdXAgZm9ybSAubGlzdC1ncm91cC1pdGVtIGlucHV0IHtcbiAgYm9yZGVyOiBub25lO1xuICB3aWR0aDogMTAwJTtcbiAgb3V0bGluZTogbm9uZTtcbiAgcGFkZGluZzogNXB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogIzY4NzE5NjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnN1YnRhc2stbGlzdCAuY29udGFpbmVyOmxhc3Qtb2YtdHlwZSAubGlzdC1ncm91cCBmb3JtIC5saXN0LWdyb3VwLWl0ZW0gaW5wdXQ6Zm9jdXMge1xuICBjb2xvcjogIzAzMDkyOTtcbn1cbi5zdWJ0YXNrLWxpc3QgLmxpbmUtYnJlYWsge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxLjVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzMCwgMjM1LCAyNDApO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["FormControl","i0","SubtaskListComponent","constructor","fb","tasksForm","group","tasks","array","ngOnInit","subTasks","map","el","createTask","name","checked","countTaskCheck","get","addTask","push","submitTasks","console","log","value","changeCheckStatus","index","taskControl","at","checkedControl","currentCheckedValue","setValue","taskChecked","controls","filter","task","length","taskPercentage","checkedCount","totalCount","toFixed","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/beharlushaku/Desktop/Angular Projects/ticket/src/app/shared/subtask-list/subtask-list.component.ts","/Users/beharlushaku/Desktop/Angular Projects/ticket/src/app/shared/subtask-list/subtask-list.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { SubTask } from '../../models';\n\n@Component({\n  selector: 'app-subtask-list',\n  templateUrl: './subtask-list.component.html',\n  styleUrls: ['./subtask-list.component.scss']\n})\nexport class SubtaskListComponent implements OnInit {\n\n  @Input('data') subTasks: SubTask[] = [];\n\n  tasksForm: FormGroup;\n  taskChecked: number = 0;\n\n  constructor(private fb: FormBuilder) {\n    this.tasksForm = this.fb.group({\n      tasks: this.fb.array([]) // Initialize with an empty FormArray\n    });\n  }\n\n  ngOnInit(): void {\n    this.tasksForm = this.fb.group({\n      tasks: this.fb.array(\n        this.subTasks.map(el => this.createTask(el.name, el.checked))\n      )\n    });\n    this.countTaskCheck();\n   }\n\n  createTask(name: string, checked: boolean): FormGroup {\n    return this.fb.group({\n      name: new FormControl(name),  // Default value for name\n      checked: new FormControl(checked) // Default value for checked\n    });\n  }\n\n  get tasks(): FormArray {\n    return this.tasksForm.get('tasks') as FormArray;\n  }\n\n  addTask() {\n    this.tasks.push(this.createTask('', false)); // Add new task with empty name\n  }\n\n  submitTasks() {\n    console.log(this.tasksForm.value); // Log the current value of the form\n  }\n\n  changeCheckStatus(index: number) {\n    const taskControl = this.tasks.at(index);\n    const checkedControl = taskControl.get('checked');\n\n    if (checkedControl) {\n      const currentCheckedValue = checkedControl.value;\n      checkedControl.setValue(!currentCheckedValue);\n    }\n    this.countTaskCheck()\n  }\n\n  countTaskCheck() {\n    this.taskChecked = this.tasks.controls.filter(task => task.value.checked).length;\n  }\n\n  get taskPercentage(): string {\n    const checkedCount = this.taskChecked;\n    const totalCount = this.tasks.controls.length;\n    return totalCount > 0 ? ((checkedCount / totalCount) * 100).toFixed(2) : '0';\n  }\n\n}\n","<div class=\"subtask-list\">\n    <div class=\"container\">\n        <div class=\"top\">\n            <h5>Subtasks</h5>\n            <div class=\"progress\" role=\"progressbar\" aria-label=\"Basic example\" \n                [attr.aria-valuenow]=\"taskPercentage\" \n                aria-valuemin=\"0\" \n                aria-valuemax=\"100\">\n                <div class=\"progress-bar\" [style.width]=\"taskPercentage + '%'\"></div>\n            </div>\n            <span>{{ taskChecked }}/{{ tasks.controls.length }}</span>\n        </div>\n    </div>\n    <div class=\"line-break\"></div>\n\n    <div class=\"container\">\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\">Subtask name</li>\n            <form [formGroup]=\"tasksForm\" (ngSubmit)=\"submitTasks()\">\n                <div formArrayName=\"tasks\">\n                    <li class=\"list-group-item\" *ngFor=\"let task of tasks.controls; let i = index\" [formGroupName]=\"i\">\n                      <div class=\"checkmark\" (click)=\"changeCheckStatus(i)\">\n                        <app-icon name=\"icon-checkmark\" *ngIf=\"task.get('checked')?.value\"></app-icon>\n                      </div>\n                      <input class=\"title\" formControlName=\"name\" placeholder=\"Enter task name\" />\n                    </li>\n                </div>\n                <li class=\"list-group-item\" (click)=\"addTask()\">\n                    <app-icon name=\"icon-zoomIn\"></app-icon>\n                    <div class=\"title\">Add subtask</div>\n                </li>\n\n            </form>\n          \n          </ul>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}